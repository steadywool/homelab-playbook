---
- name: Configure NUT server for local standalone mode
  ansible.builtin.lineinfile:
    path: "{{ item['path'] }}"
    state: present
    regexp: "{{ item['regexp'] }}"
    line: "{{ item['line'] }}"
  loop:
    - { path: '/etc/nut/nut.conf', regexp: '^MODE=', line: 'MODE=standalone' }
    - { path: '/etc/nut/upsd.conf', regexp: '^LISTEN', line: 'LISTEN 127.0.0.1 3493' }

- name: Add my UPS to ups.conf
  ansible.builtin.blockinfile:
    path: /etc/nut/ups.conf
    state: present
    block: |
      # Define the UPS device configuration
      [eaton3s]
        driver = usbhid-ups
        port = auto
        desc = "Eaton 3S UPS"

- name: Create UPSMON primary user
  ansible.builtin.blockinfile:
    path: /etc/nut/upsd.users
    state: present
    block: |
      # Define user credentials for monitoring the UPS
      [upsmon]
        password = {{ nut_upsmon_password }}
        upsmon primary

- name: Ensure UPSMON config is correct
  ansible.builtin.lineinfile:
    path: /etc/nut/upsmon.conf
    state: present
    regexp: '^MONITOR'
    line: "MONITOR eaton3s@localhost 1 upsmon {{ nut_upsmon_password }} primary"

- name: Restart NUT services
  ansible.builtin.systemd_service:
    name: "{{ item }}"
    state: restarted
    scope: system
  loop:
    - nut-server.service
    - nut-client.service
    - nut-monitor.service