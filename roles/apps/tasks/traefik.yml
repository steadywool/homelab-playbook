---
- name: Create Traefik directory
  ansible.builtin.file:
    path: "{{ docker.directory }}/traefik"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  register: traefik

- name: Template Traefik configuration
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "{{ traefik.path }}/{{ item }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  loop:
    - traefik.yml
    - config.yml

- name: Create acme.json file
  ansible.builtin.file:
    path: "{{ traefik.path }}/acme.json"
    state: touch
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0600'

- name: Run traefik container
  community.docker.docker_container:
    name: traefik
    image: docker.io/library/traefik:latest
    state: started
    restart_policy: always
    network_mode: "{{ docker.network }}"
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - "{{ traefik.path }}/acme.json:/acme.json"
      - "{{ traefik.path }}/traefik.yml:/traefik.yml"
      - "{{ traefik.path }}/config.yml:/config.yml"
    env:
      OVH_ENDPOINT: "{{ ovh_endpoint }}"
      OVH_APPLICATION_KEY: "{{ ovh_application_key }}"
      OVH_APPLICATION_SECRET: "{{ ovh_application_secret }}"
      OVH_CONSUMER_KEY: "{{ ovh_consumer_key}}"
    labels:
      traefik.enable: "true"
      traefik.http.routers.traefik.rule: Host(`traefik.{{ private_domain }}`)
      traefik.http.routers.traefik.entrypoints: "https"
      traefik.http.routers.traefik.tls.certresolver: "ovh"
      traefik.http.routers.traefik.tls.domains[0].main: "{{ private_domain }}"
      traefik.http.routers.traefik.tls.domains[0].sans: "*.{{ private_domain }}"
      traefik.http.routers.traefik.service: "api@internal"