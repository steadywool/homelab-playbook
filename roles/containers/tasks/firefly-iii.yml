---
- name: Create Firefly III volumes
  community.docker.docker_volume:
    state: present
    name: "{{ item }}"
  loop:
    - firefly_upload
    - firefly_database

- name: Run Cron container
  community.docker.docker_container:
    name: firefly-cron
    image: docker.io/library/alpine:latest
    state: started
    restart_policy: always
    restart: true
    network_mode: "{{ docker.network }}"
    command: sh -c "echo \"0 6 * * * wget -qO- http://firefly:8080/api/v1/cron/{{ firefly_token }}\" | crontab - && crond -f -L /dev/stdout"

- name: Run Firefly III container
  community.docker.docker_container:
    name: firefly
    image: docker.io/fireflyiii/core:latest
    state: started
    restart_policy: always
    restart: true
    network_mode: "{{ docker.network }}"
    volumes:
      - firefly_upload:/var/www/html/storage/upload
      - firefly_database:/var/www/html/storage/database
    env:
      APP_ENV: local
      APP_KEY: "{{ firefly_token }}"
      TZ: Europe/Paris
      DB_CONNECTION: sqlite
      MAIL_MAILER: log
      STATIC_CRON_TOKEN: "{{ firefly_token }}"
      TRUSTED_PROXIES: "**"
      APP_URL: "https://firefly.{{ private_domain }}"
    labels:
      traefik.enable: "true"
      traefik.http.routers.firefly.rule: Host(`firefly.{{ private_domain }}`)
      traefik.http.routers.firefly.entrypoints: "https"
      traefik.http.routers.firefly.tls: "true"
      traefik.http.routers.firefly.service: "firefly"
      traefik.http.services.firefly.loadbalancer.server.port: "8080"